// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MilesCarRental.Infrastructure;

#nullable disable

namespace MilesCarRental.Infrastructure.Migrations
{
    [DbContext(typeof(CarRentalDbContext))]
    [Migration("20240227142123_InitialDB")]
    partial class InitialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MilesCarRental.Infrastructure.Entities.AlquilerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("FechaRecoge")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<int>("HoraEntrega")
                        .HasColumnType("int")
                        .HasColumnOrder(9);

                    b.Property<int>("HoraRecoge")
                        .HasColumnType("int")
                        .HasColumnOrder(7);

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int>("IdLocalidadEntrega")
                        .HasColumnType("int")
                        .HasColumnOrder(5);

                    b.Property<int>("IdVehiculo")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<int>("IdlocalidadRecoge")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdLocalidadEntrega");

                    b.HasIndex("IdVehiculo");

                    b.HasIndex("IdlocalidadRecoge");

                    b.ToTable("Alquileres");
                });

            modelBuilder.Entity("MilesCarRental.Infrastructure.Entities.ClienteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(5);

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(6);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Direccion = "Carrera 42A",
                            Documento = "1128436325",
                            Email = "jeison9101@gmail.com",
                            Nombre = "Jeison Cañas",
                            Telefono = "3137653881"
                        },
                        new
                        {
                            Id = 2,
                            Direccion = "Calle 81",
                            Documento = "1023468549",
                            Email = "carlos@example.com",
                            Nombre = "Carlos Perez",
                            Telefono = "3012568423"
                        },
                        new
                        {
                            Id = 3,
                            Direccion = "Av 34 sur",
                            Documento = "1165794321",
                            Email = "cata21@example.com",
                            Nombre = "Catalina Cifuentes",
                            Telefono = "3104526981"
                        });
                });

            modelBuilder.Entity("MilesCarRental.Infrastructure.Entities.LocalidadEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(3);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(2);

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.ToTable("Localidades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Direccion = "Carrera 21",
                            Nombre = "Sede Principal",
                            Telefono = "3012584679"
                        },
                        new
                        {
                            Id = 2,
                            Direccion = "Carrera 200",
                            Nombre = "Sede Bogota",
                            Telefono = "3012584613"
                        },
                        new
                        {
                            Id = 3,
                            Direccion = " Carrera 80",
                            Nombre = "Sede Medellin Belen",
                            Telefono = "3005681285"
                        },
                        new
                        {
                            Id = 4,
                            Direccion = "Calle 93",
                            Nombre = "Sede Bogota la 93",
                            Telefono = "3128964352"
                        });
                });

            modelBuilder.Entity("MilesCarRental.Infrastructure.Entities.MarcaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("Marcas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Renault"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Chevrolet"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Mazda"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Kia"
                        });
                });

            modelBuilder.Entity("MilesCarRental.Infrastructure.Entities.VehiculoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdMarca")
                        .HasMaxLength(13)
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<int>("Modelo")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("IdMarca");

                    b.ToTable("Vehiculos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdMarca = 1,
                            Modelo = 2016,
                            Placa = "AAQ 365"
                        },
                        new
                        {
                            Id = 2,
                            IdMarca = 1,
                            Modelo = 2021,
                            Placa = "TIP 452"
                        },
                        new
                        {
                            Id = 3,
                            IdMarca = 2,
                            Modelo = 2022,
                            Placa = "UTG 123"
                        },
                        new
                        {
                            Id = 4,
                            IdMarca = 3,
                            Modelo = 2015,
                            Placa = "PRR 759"
                        });
                });

            modelBuilder.Entity("MilesCarRental.Infrastructure.Entities.AlquilerEntity", b =>
                {
                    b.HasOne("MilesCarRental.Infrastructure.Entities.ClienteEntity", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MilesCarRental.Infrastructure.Entities.LocalidadEntity", "LocalidadEntrega")
                        .WithMany()
                        .HasForeignKey("IdLocalidadEntrega")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MilesCarRental.Infrastructure.Entities.VehiculoEntity", "Vehiculo")
                        .WithMany("Alquileres")
                        .HasForeignKey("IdVehiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MilesCarRental.Infrastructure.Entities.LocalidadEntity", "localidadRecoge")
                        .WithMany()
                        .HasForeignKey("IdlocalidadRecoge")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("LocalidadEntrega");

                    b.Navigation("Vehiculo");

                    b.Navigation("localidadRecoge");
                });

            modelBuilder.Entity("MilesCarRental.Infrastructure.Entities.VehiculoEntity", b =>
                {
                    b.HasOne("MilesCarRental.Infrastructure.Entities.MarcaEntity", "marcaEntity")
                        .WithMany()
                        .HasForeignKey("IdMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("marcaEntity");
                });

            modelBuilder.Entity("MilesCarRental.Infrastructure.Entities.VehiculoEntity", b =>
                {
                    b.Navigation("Alquileres");
                });
#pragma warning restore 612, 618
        }
    }
}
